name: Release and Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Configure Git
        run: |
          git config --global user.email "zardui.adm@gmail.com"
          git config --global user.name "ZardUI Bot"

      - name: Install dependencies
        run: npm ci

      - name: Extract version from tag
        id: version_info
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

          # Extract version from tag vX.X.X
          if [[ "$TAG_NAME" == v* ]]; then
            VERSION="${TAG_NAME#v}"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "Invalid tag format. Expected vX.X.X" >&2
            exit 1
          fi

      - name: Update package.json version
        run: |
          # Update CLI package.json with tag version
          node -e "const fs = require('fs'); const pkg = require('./packages/cli/package.json'); pkg.version = '${{ steps.version_info.outputs.version }}'; fs.writeFileSync('./packages/cli/package.json', JSON.stringify(pkg, null, 2) + '\n');"

          # Update main package.json with tag version
          node -e "const fs = require('fs'); const pkg = require('./package.json'); pkg.version = '${{ steps.version_info.outputs.version }}'; fs.writeFileSync('./package.json', JSON.stringify(pkg, null, 2) + '\n');"

      - name: Build CLI
        run: npx nx build cli

      - name: Verify build output
        run: |
          PACKAGE_VERSION=$(node -p "require('./packages/cli/dist/package.json').version")
          echo "Built package version: $PACKAGE_VERSION"
          echo "Tag version: ${{ steps.version_info.outputs.version }}"

      - name: Publish CLI to npm
        run: |
          cd packages/cli/dist
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_SECRET }}

      - name: ðŸŽ‰ Publish Summary
        run: |
          echo "## âœ… Package Published Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“¦ Published to npm" >> $GITHUB_STEP_SUMMARY
          echo "**[@ngzard/ui@${{ steps.version_info.outputs.version }}](https://www.npmjs.com/package/@ngzard/ui/v/${{ steps.version_info.outputs.version }})**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸš€ Installation" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "npx @ngzard/ui@${{ steps.version_info.outputs.version }} init" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
