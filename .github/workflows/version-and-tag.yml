name: Version and Tag

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease
      preid:
        description: 'Pre-release identifier (only for prerelease)'
        required: false
        type: string
        default: 'beta'
      specifier:
        description: 'Version specifier (optional - e.g., 1.2.3)'
        required: false
        type: string

jobs:
  version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Configure Git
        run: |
          git config --global user.email "zardui.adm@gmail.com"
          git config --global user.name "ZardUI Bot"

      - name: Install dependencies
        run: npm ci

      - name: Determine version
        id: version
        run: |
          if [ -n "${{ github.event.inputs.specifier }}" ]; then
            VERSION="${{ github.event.inputs.specifier }}"
          elif [ "${{ github.event.inputs.version }}" == "prerelease" ]; then
            CURRENT=$(node -p "require('./packages/cli/package.json').version")
            VERSION=$(npx semver -i prerelease --preid ${{ github.event.inputs.preid }} $CURRENT)
          else
            CURRENT=$(node -p "require('./packages/cli/package.json').version")
            VERSION=$(npx semver -i ${{ github.event.inputs.version }} $CURRENT)
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Version CLI
        run: npx nx release version ${{ steps.version.outputs.version }} --verbose

      - name: Generate changelogs
        run: npx nx release changelog --verbose

      - name: Push changes and tags
        run: |
          # Nx already created commits and tags, we just need to push
          git push origin master --follow-tags

      - name: Summary
        run: |
          VERSION="${{ steps.version.outputs.version }}"

          echo "## ðŸŽ‰ Release created successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Tag created:" >> $GITHUB_STEP_SUMMARY
          echo "- \`zard@$VERSION\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Package published:" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸ“¦ **@ngzard/ui@$VERSION**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The publish workflow will be triggered automatically." >> $GITHUB_STEP_SUMMARY
